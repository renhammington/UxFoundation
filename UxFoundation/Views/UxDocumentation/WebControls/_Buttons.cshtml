@using Ux.Mvc.Web.UI
<div class="page-header">
    <h1>Buttons <small>UxButton</small></h1>
</div>
<div class="section">
    <h3>Helpers</h3>
    <div class="highlight highlight-large">
        <pre class="prettyprint">
@@Html.UxButton()
</pre>
    </div>
</div>
<div class="section">

    <h3>Appearance</h3>
    <p>Button appearance can be set using the <code>AppearanceType</code> enumeration.</p>
    <div class="example">
        @Html.UxButton("Default", ButtonAppearanceType.Default) @Html.UxButton("Primary", ButtonAppearanceType.Primary) @Html.UxButton("Success", ButtonAppearanceType.Success) @Html.UxButton("Info", ButtonAppearanceType.Info) @Html.UxButton("Warning", ButtonAppearanceType.Warning) @Html.UxButton("Danger", ButtonAppearanceType.Danger)
    </div>
    <div class="highlight">
        <pre class="prettyprint">
@@Html.UxButton("Default") 
@@Html.UxButton("Primary", ButtonAppearanceType.Primary) 
@@Html.UxButton("Success", ButtonAppearanceType.Success) 
@@Html.UxButton("Info", ButtonAppearanceType.Info) 
@@Html.UxButton("Warning", ButtonAppearanceType.Warning) 
@@Html.UxButton("Danger", ButtonAppearanceType.Danger)</pre>
    </div>
</div>
<div class="section">

    <h3>Icons</h3>
    <p>Icons can be included with buttons using the <code>IconType</code> enumeration. The position of the icon can be set using the <code>IconPosition</code> enumeration. If there is no button text, the position is ignored.</p>
    <div class="example">
        @Html.UxButton("Left icon", ButtonAppearanceType.Primary, iconType: IconType.Ok)
        @Html.UxButton("Right icon", ButtonAppearanceType.Primary, iconType: IconType.Ok, position: IconPosition.Right)
    </div>
    <div class="highlight">
        <pre class="prettyprint">
@@Html.UxButton("Left icon", iconType: IconType.Ok)
@@Html.UxButton("Right icon", iconType: IconType.Ok, position: IconPosition.Right)
</pre>
    </div>
</div>
<div class="section">

    <h3>Sizes</h3>
    <p>Button size can be set using the <code>ButtonSize</code> enumeration.</p>
    <div class="example">
        @Html.UxButton("Extra small", ButtonAppearanceType.Success, size: ButtonSize.ExtraSmall)
        @Html.UxButton("Small", ButtonAppearanceType.Success, size: ButtonSize.Small)
        @Html.UxButton("Default", ButtonAppearanceType.Success)
        @Html.UxButton("Large", ButtonAppearanceType.Success, size: ButtonSize.Large)
    </div>
    <div class="highlight">
        <pre class="prettyprint">
@@Html.UxButton("Extra small", size: ButtonSize.ExtraSmall) 
@@Html.UxButton("Small", size: ButtonSize.Small) 
@@Html.UxButton("Default") 
@@Html.UxButton("Large", size: ButtonSize.Large)</pre>
    </div>
</div>
<div class="section">
    <h3>Disabled</h3>
    <p>Buttons can be disabled by setting the <code>disabled</code> argument.</p>
    <div class="example">
        @Html.UxButton("Disabled", ButtonAppearanceType.Primary, disabled: true)
    </div>
    <div class="highlight">
        <pre class="prettyprint">
@@Html.UxButton("Disabled", ButtonAppearanceType.Primary, disabled: true)
</pre>
    </div>
</div>
<div class="section">

    <h3>Loading text</h3>
    <p>Loading text can be set on any button. If set, when a button is clicked, the text will swap temporarily with the loading text value.</p>
    <div class="example">
        @Html.UxButton("Click me", loadingText: "Loading...")
    </div>
    <div class="highlight">
        <pre class="prettyprint">
@@Html.UxButton("Click me", loadingText: "Loading...")
</pre>
    </div>
</div>
<div class="section">
    <h3>Common buttons</h3>
    <p>Three additional helpers are available for commonly used buttons. Using these helpers in your app ensures a consistent look, feel and behaviour of your frequently used buttons. Appropriate commands and validation behaviours are pre-set.</p>
    <div class="example">
        @Html.UxSaveButton() @Html.UxCancelButton() @Html.UxDeleteButton()
    </div>
    <div class="highlight">
        <pre class="prettyprint">
@@Html.UxSaveButton() 
@@Html.UxCancelButton() 
@@Html.UxDeleteButton()
</pre>
    </div>
</div>
<div class="section">
    <h3>Close button</h3>
    <p>When used within an alert, set <code>closeAlert: true</code> in the helper to enable automatic hiding on click.</p>
    <div class="example">
        <div class="clearfix">
            @Html.UxCloseButton()
        </div>
    </div>
    <div class="highlight">
        <pre class="prettyprint">
@@Html.UxCloseButton()
</pre>
    </div>
</div>
<div class="section">
    <h3>Parameters</h3>
    @using (var panel = Html.UxPanel())
    {
        @panel.Header(
    @:UxButton
)
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Default</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>text</td>
                    <td><code>string</code></td>
                    <td><code>null</code></td>
                    <td>The text to display on the button.</td>
                </tr>
                <tr>
                    <td>appearance</td>
                    <td><code>ButtonAppearanceType</code></td>
                    <td><code>Default</code></td>
                    <td>Sets the coloring of the button.</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td><code>ButtonSize</code></td>
                    <td><code>Default</code></td>
                    <td>Sets the size of the button.</td>
                </tr>
                <tr>
                    <td>iconType</td>
                    <td><code>IconType</code></td>
                    <td><code>null</code></td>
                    <td>Sets the icon for the button.</td>
                </tr>
                <tr>
                    <td>iconPosition</td>
                    <td><code>IconPosition</code></td>
                    <td><code>Left</code></td>
                    <td>Sets the position of the icon, relative to the button text.</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td><code>bool</code></td>
                    <td><code>false</code></td>
                    <td>Prevents the button from being clicked if set to <code>true</code>.</td>
                </tr>
                <tr>
                    <td>loadingText</td>
                    <td><code>string</code></td>
                    <td><code>null</code></td>
                    <td>If set, replaces the button text temporarily when the button is clicked.</td>
                </tr>
                <tr>
                    <td>clientId</td>
                    <td><code>string</code></td>
                    <td><code>null</code></td>
                    <td>Sets the <code>id</code> property of the rendered html element.</td>
                </tr>
            </tbody>
        </table>
    }
</div>



