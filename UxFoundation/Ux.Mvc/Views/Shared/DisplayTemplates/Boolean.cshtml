@using Ux.Mvc.Web.UI
@using Ux.Mvc.Attributes
@model bool?
@{
	
	string nullText = "Not set";
	string trueText = "Yes";
	string falseText = "No";

    string key = UxAttributeKeys.Boolean.TrueText;
	if (ViewData.ModelMetadata.AdditionalValues.ContainsKey(key) && ViewData.ModelMetadata.AdditionalValues[key] != null) 
	{
		trueText = ViewData.ModelMetadata.AdditionalValues[key].ToString(); 
	}
    key = UxAttributeKeys.Boolean.FalseText;
	if (ViewData.ModelMetadata.AdditionalValues.ContainsKey(key) && ViewData.ModelMetadata.AdditionalValues[key] != null)
	{
		falseText = ViewData.ModelMetadata.AdditionalValues[key].ToString();
	}
		

	if (ViewData.ModelMetadata.AdditionalValues.ContainsKey(UxAttributeKeys.Boolean.Type))
    {
        var boolType = (BooleanType)ViewData.ModelMetadata.AdditionalValues[UxAttributeKeys.Boolean.Type];
		switch (boolType)
		{
			case BooleanType.YesNo:
				trueText = "Yes";
				falseText = "No";
				break;
			case BooleanType.TrueFalse:
				trueText = "True";
				falseText = "False";
				break;
			default:
				break;
		}
	}

    key = UxAttributeKeys.Boolean.NullText;
	if (ViewData.ModelMetadata.AdditionalValues.ContainsKey(key) && ViewData.ModelMetadata.AdditionalValues[key] != null)
	{
		nullText = ViewData.ModelMetadata.AdditionalValues[key].ToString();
	}

	string value = string.Empty;
	if (Model.HasValue == false) { value = nullText; }
	else if (Model == true) { value = trueText; }
	else { value = falseText; }
}
@value



